CREATE TABLE AUTHORITIES
(
  id bigserial NOT NULL,
  name character varying(60),
  CONSTRAINT authorities_pkey PRIMARY KEY (id)
);

CREATE TABLE USERS
(
  id bigserial NOT NULL,
  username character varying(60) NOT NULL,
  password character varying(255) NOT NULL,
  first_name character varying(50) NOT NULL,
  last_name character varying(50) NOT NULL,
  email character varying(50) NOT NULL,
  last_password_reset_date timestamp without time zone,
  enabled boolean,
  subscribed_to_date timestamp without time zone,
  ip_address character varying(50),
  CONSTRAINT users_pkey PRIMARY KEY (id),
  CONSTRAINT uk_avh1b2ec82audum2lyjx2p1ws UNIQUE (email),
  CONSTRAINT uk_dc4eq7plr20fdhq528twsak1b UNIQUE (username)
);

CREATE TABLE USER_AUTHORITY
(
  user_id bigint,
  authority_id bigint,
  CONSTRAINT fk_gr6xgu0wc88iatb49jedq7fa8 FOREIGN KEY (user_id)
      REFERENCES USERS (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_gr6xgu0wb88iatb49jedq7fa8 FOREIGN KEY (authority_id)
  REFERENCES AUTHORITIES (id) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE VERIFICATION_TOKEN
(
  id bigserial NOT NULL CONSTRAINT verification_token_pkey PRIMARY KEY,
  token character varying(250),
  user_id bigint,
  expiry_date timestamp without time zone,
  CONSTRAINT fk_gr6xgu8wb88iatb49jedq7fa8 FOREIGN KEY (user_id)
  REFERENCES USERS (id) MATCH SIMPLE
  ON UPDATE NO ACTION ON DELETE NO ACTION
);

-- the password hash is generated by BCrypt Calculator Generator(https://www.dailycred.com/article/bcrypt-calculator)
INSERT INTO USERS (id, username, password, first_name, last_name, email, enabled) VALUES ((SELECT nextval('users_id_seq')), 'admin', '$2a$04$Vbug2lwwJGrvUXTj6z7ff.97IzVBkrJ1XfApfGNl.Z695zqcnPYra', 'Admin', 'Admin', 'admin_admin@abv.bg', true);

INSERT INTO AUTHORITIES (id, name) VALUES ((SELECT nextval('authorities_id_seq')), 'ROLE_USER');
INSERT INTO AUTHORITIES (id, name) VALUES ((SELECT nextval('authorities_id_seq')), 'ROLE_ADMIN');

INSERT INTO USER_AUTHORITY (user_id, authority_id) VALUES ((SELECT currval('users_id_seq')), (SELECT currval('authorities_id_seq')));

CREATE TABLE RETAILERS
(
  id bigserial NOT NULL,
  retailer_username character varying(250) NOT NULL,
  url character varying(250),
  feedback_score integer,
  retailer_listings integer,
  is_top_rated boolean,
  CONSTRAINT retailers_pkey PRIMARY KEY (id),
  CONSTRAINT unique_retailer UNIQUE (retailer_username)
);

CREATE TABLE SALES_ITEMS
(
  id bigserial NOT NULL,
  item_title character varying(250),
  price character varying(250),
  url character varying(250) NOT NULL,
  retailer_id bigint,
  picture character varying(250),
  sale_date timestamp without time zone,
  times_sold integer,
  upc character varying(250),
  amazon_url character varying(550),
  amazon_picture character varying(250),
  amazon_price character varying(50),
  CONSTRAINT salesitems_pkey PRIMARY KEY (id),
  CONSTRAINT unique_url UNIQUE (url),
  CONSTRAINT fk_gr6xgu0wc31iatb49jedq7fa8 FOREIGN KEY (retailer_id)
      REFERENCES retailers (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE USERS_RETAILERS
(
  id bigserial NOT NULL,
  retailer_id bigint,
  user_id bigint,
  CONSTRAINT users_retailers_pkey PRIMARY KEY (id),
  CONSTRAINT fk_11w8bhoyq4w1vl6j0thjxf53a FOREIGN KEY (retailer_id)
      REFERENCES retailers (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_d1wq9xxxix9fv05ho9xpylasj FOREIGN KEY (user_id)
      REFERENCES users (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);

ALTER TABLE USERS_RETAILERS ADD UNIQUE (retailer_id, user_id);

CREATE TABLE USERS_SALESITEMS
(
  id bigserial NOT NULL,
  salesitem_id bigint,
  user_id bigint,
  CONSTRAINT users_salesitems_pkey PRIMARY KEY (id),
  CONSTRAINT fk_9htlc0kwqcx5mxoqjeiilk6xu FOREIGN KEY (user_id)
      REFERENCES users (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_avexl9hai2bpsufq7is8luevf FOREIGN KEY (salesitem_id)
      REFERENCES sales_items (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);

ALTER TABLE USERS_SALESITEMS ADD UNIQUE (salesitem_id, user_id);

CREATE TABLE EXTERNAL_ACCOUNTS
(
  id bigserial NOT NULL CONSTRAINT ebay_account_id_pkey PRIMARY KEY,
  account_type character varying(250),
  associate_tag character varying(250),
  aws_access_key character varying(250),
  aws_secret_key character varying(250),
  account_id character varying(250)
);

INSERT INTO EXTERNAL_ACCOUNTS (id, account_type, associate_tag, aws_access_key, aws_secret_key, account_id) VALUES (1,'amazon', 'hotitemsfinde-20', 'AKIAJYNJAO55XBRUWUUQ', '6MPK/kfm7TzRKNZQqD+TSeikQHN6IAfaLVxxxsbT',null);
INSERT INTO EXTERNAL_ACCOUNTS (id, account_type, associate_tag, aws_access_key, aws_secret_key, account_id) VALUES (2,'ebay', null, null, null,'VasilAta-edf6-43f5-ac5c-f461c3614cd9');
INSERT INTO EXTERNAL_ACCOUNTS (id, account_type, associate_tag, aws_access_key, aws_secret_key, account_id) VALUES (3,'amazon', 'petarmircheva-21', 'AKIAJDV5K27VLYFO63IA', 'PcENgBx8cjqlnKBVreqbpc+ZK0g03s+zWm0PB54c',null);
INSERT INTO EXTERNAL_ACCOUNTS (id, account_type, associate_tag, aws_access_key, aws_secret_key, account_id) VALUES (4,'amazon', 'niceitems0c-20', 'AKIAIXE7ZUPTTZY6AC6A', 'B/rkPGcbg9SyKMGE06gMy4FgSGxwfXprhfxSecU+',null);
INSERT INTO EXTERNAL_ACCOUNTS (id, account_type, associate_tag, aws_access_key, aws_secret_key, account_id) VALUES (5,'amazon', 'mihaelabg-20', 'AKIAIQGTLIARXU5ZUZJA', 'f13RnahpUXcMg1os2fgf6f/ycilCH2PjkMpbKXl7',null);
INSERT INTO EXTERNAL_ACCOUNTS (id, account_type, associate_tag, aws_access_key, aws_secret_key, account_id) VALUES (6,'amazon', 'moneymaker0ba-20', 'AKIAJ7YI4RXLVUXJZQYQ', '6ndr8CC+P33RmG/AP45eF1DRk/yLtwJVvh4HU00E',null);
INSERT INTO EXTERNAL_ACCOUNTS (id, account_type, associate_tag, aws_access_key, aws_secret_key, account_id) VALUES (7,'ebay', 'mihaelahristovasf', 'notallowed144166!', 'mihaela_hristova_sf@abv.bg','MihaelaH-Mihaela-PRD-551ca6568-7b82ae03');
INSERT INTO EXTERNAL_ACCOUNTS (id, account_type, associate_tag, aws_access_key, aws_secret_key, account_id) VALUES (8,'ebay', 'valeri.stoyanov', 'notallowed144166!', 'valeri.stoyanov@yahoo.com','ValeriSt-valerist-PRD-45d7a0307-f018f9a8');
INSERT INTO EXTERNAL_ACCOUNTS (id, account_type, associate_tag, aws_access_key, aws_secret_key, account_id) VALUES (9,'ebay', 'petar.ivanov', 'zzz144144zzz!', 'amazon_6011_@abv.bg','PetarIva-Applicat-PRD-b51ca6568-4f03ad02');
INSERT INTO EXTERNAL_ACCOUNTS (id, account_type, associate_tag, aws_access_key, aws_secret_key, account_id) VALUES (10,'ebay', 'gerogi.radoslavov', 'notallowed144144!', 'georgi_radoslavov_02@abv.bg','GeorgiRa-gerogi-PRD-45d7504c4-7007f112');
INSERT INTO EXTERNAL_ACCOUNTS (id, account_type, associate_tag, aws_access_key, aws_secret_key, account_id) VALUES (11,'ebay', 'stefan.stefanov', 'testpass1!', 'amazon_6012@abv.bg','StefanSt-App-PRD-25d80d3bd-0c613ea1');
INSERT INTO EXTERNAL_ACCOUNTS (id, account_type, associate_tag, aws_access_key, aws_secret_key, account_id) VALUES (12,'usps', null, null, '863XA66VA868','444HOTIT59821');
INSERT INTO EXTERNAL_ACCOUNTS (id, account_type, associate_tag, aws_access_key, aws_secret_key, account_id) VALUES (14,'ebay', 'petarpetrov', '12sladoled!', 'amazon_6014@abv.bg','PetarPet-petarpet-PRD-ae44c9784-81060165');
INSERT INTO EXTERNAL_ACCOUNTS (id, account_type, associate_tag, aws_access_key, aws_secret_key, account_id) VALUES (15,'ebay', 'todortodorov', '12todor1!', 'amazon_6009@abv.bg','TodorTod-todortod-PRD-7df6c4a56-2d936c18');

CREATE TABLE TRACKING_NUMBERS
(
  id bigserial NOT NULL CONSTRAINT tracking_number_id_pkey PRIMARY KEY,
  user_id bigint,
  tracking_number character varying(250),
  shipping_date timestamp without time zone,
  shipping_state character varying(80),
  shipping_city character varying(80),
  CONSTRAINT fk_9htlc0lwqcx88xoqjeiilk6xu FOREIGN KEY (user_id)
      REFERENCES users (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE TICKETS
(
  id bigserial NOT NULL CONSTRAINT tickets_id_pkey PRIMARY KEY,
  user_id bigint,
  title character varying(250),
  ticket_content character varying(1024),
  answer character varying(1024),
  status character varying(80),
  creation_date timestamp without time zone,
  CONSTRAINT fk_9htlc0lwqcx90xoqjeiilk6xu FOREIGN KEY (user_id)
      REFERENCES users (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE ANONYMOUS_PROXY
(
  id bigserial NOT NULL CONSTRAINT anonymous_proxy_pkey PRIMARY KEY,
  host character varying(250),
  port bigint
);
-- for host we put the ip of the machine where squid is located
INSERT INTO ANONYMOUS_PROXY (id, host, port) VALUES (1,'173.212.207.42', '3128');
INSERT INTO ANONYMOUS_PROXY (id, host, port) VALUES (2,'173.212.207.42', '3129');
INSERT INTO ANONYMOUS_PROXY (id, host, port) VALUES (3,'173.212.207.42', '3130');

create table CRAWLER_LOCK (
  id character varying(250)
);

ALTER TABLE CRAWLER_LOCK ADD UNIQUE (id);

ALTER TABLE CRAWLER_LOCK ADD PRIMARY KEY (id);


CREATE OR REPLACE FUNCTION aquire_lock(i_id varchar(100)) RETURNS VOID AS
$$
BEGIN
    INSERT INTO CRAWLER_LOCK (id) VALUES (i_id);
    DELETE FROM CRAWLER_LOCK WHERE id = i_id;
END
$$
  LANGUAGE 'plpgsql';

  
SET transaction ISOLATION LEVEL READ UNCOMMITTED;

or go to C:\Program Files\PostgreSQL\9.3\data\postgresql.conf and change postgresql.conf file : default_transaction_isolation = 'read uncommitted'

Restart databse

sudo service postgresql restart in folder /etc/intit.d